import os
from typing import Optional

from moviepy import AudioFileClip, CompositeAudioClip, VideoFileClip

from src.config.settings import ALLOWED_THREADS, AUDIO_PATH, ORIGINAL_VIDEO, RESOLUTION
from src.utils.file_utils import delete_file


def get_audio_full_path(video_path: str, audio_dir: str, extension: str = "aac") -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω –∏–∑ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞.

    :param video_path: –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É.
    :param audio_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –∫—É–¥–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∞—É–¥–∏–æ—Ñ–∞–π–ª.
    :param extension: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'aac'.
    :return: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º.
    """
    filename = os.path.splitext(os.path.basename(video_path))[0]
    return os.path.join(audio_dir, f"{filename}.{extension}")


def delete_audio_if_exists(audio_path: str) -> None:
    """
    –£–¥–∞–ª—è–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.

    :param audio_path: –ü—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É.
    """
    if os.path.exists(audio_path):
        delete_file(audio_path)
        print(f"üóëÔ∏è –ê—É–¥–∏–æ—Ñ–∞–π–ª {audio_path} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
    else:
        print(f"‚ö†Ô∏è –ê—É–¥–∏–æ—Ñ–∞–π–ª {audio_path} –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")


def extract_audio(
    video_path: str = ORIGINAL_VIDEO,
    audio_path: str = AUDIO_PATH,
    extension: str = "mp3",
) -> Optional[str]:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª.

    :param video_path: –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É.
    :param audio_path: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –∫—É–¥–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∞—É–¥–∏–æ—Ñ–∞–π–ª.
    :param extension: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'mp3'.
    :return: –ü—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É –∞—É–¥–∏–æ—Ñ–∞–π–ª—É –∏–ª–∏ None, –µ—Å–ª–∏ –∞—É–¥–∏–æ–ø–æ—Ç–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.
    """
    audio_file = get_audio_full_path(video_path, audio_path, extension)
    delete_audio_if_exists(audio_file)
    print(f"\nüéµ –ù–∞—á–∏–Ω–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ...")
    print(f"üìÅ –í–∏–¥–µ–æ: {video_path}")
    print(f"üéß –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {audio_file}")
    with VideoFileClip(video_path) as clip:
        if not clip.audio:
            print("üö® –û—à–∏–±–∫–∞: –∞—É–¥–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–µ.")
            return None

        print(f"üîä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ:")
        print(f"\tüîâ –ö–æ–¥–µ–∫: {'libmp3lame' if extension == 'mp3' else extension}")
        print(f"\tüéöÔ∏è –ë–∏—Ç—Ä–µ–π—Ç: 192k")
        print(f"\tüéõÔ∏è –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏: 44100 Hz")
        print(f"\tüéß –ö–∞–Ω–∞–ª—ã: 2 (—Å—Ç–µ—Ä–µ–æ)")

        clip.audio.write_audiofile(
            audio_file,
            codec="libmp3lame" if extension == "mp3" else extension,
            bitrate="192k",
            ffmpeg_params=["-vn", "-ar", "44100", "-ac", "2"],
        )
        return audio_file


def insert_audio(
    audio_path: str,
    fps: float,
    video_path: str,
    output_path: str,
    audio_format: str = "mp3",
    resolution: str = RESOLUTION,
) -> None:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª –≤ –≤–∏–¥–µ–æ, —Å–æ—Ö—Ä–∞–Ω—è—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ, —Å —É—á–µ—Ç–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤–∏–¥–µ–æ.

    :param audio_path: –ü—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É.
    :param fps: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.
    :param audio_format: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'mp3'.
    :param video_path: –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –∞—É–¥–∏–æ.
    :param output_path: –ü—É—Ç—å –∫ –∏—Ç–æ–≥–æ–≤–æ–º—É —Ñ–∞–π–ª—É, –∫—É–¥–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–∏–¥–µ–æ —Å –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–æ–π.
    :param resolution: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤–∏–¥–µ–æ ('4K' –∏–ª–∏ '8K'), —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –±–∏—Ç—Ä–µ–π—Ç. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é '4K'.
    :return: None
    """
    print(f"\nüé¨ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ –∫ –≤–∏–¥–µ–æ...")
    print(f"üìπ –í–∏–¥–µ–æ: {video_path}")
    print(f"üéß –ê—É–¥–∏–æ: {audio_path}")
    print(f"üíæ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {output_path}")

    with VideoFileClip(video_path) as video, AudioFileClip(audio_path) as audio:
        audio_set = CompositeAudioClip([audio])
        video_with_audio = video.with_audio(audio_set)
        bitrate = "20000k" if resolution == "4K" else "40000k"
        print(f"\n‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
        print(f"\tüéûÔ∏è –ö–æ–¥–µ–∫ –≤–∏–¥–µ–æ: libx265")
        print(f"\tüîä –ö–æ–¥–µ–∫ –∞—É–¥–∏–æ: {audio_format}")
        print(f"\t‚è±Ô∏è FPS: {fps}")
        print(f"\t‚ö° –ü—Ä–µ—Å–µ—Ç: slow")
        print(f"\tüßµ –ü–æ—Ç–æ–∫–æ–≤: {ALLOWED_THREADS}")
        print(f"\tüíΩ –ë–∏—Ç—Ä–µ–π—Ç: {bitrate}")
        print(f"\tüñ•Ô∏è –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {resolution}")
        video_with_audio.write_videofile(
            output_path,
            codec="libx265",
            audio_codec=audio_format,
            fps=fps,
            preset="slow",
            threads=ALLOWED_THREADS,
            bitrate=bitrate,
        )
    delete_file(audio_path)
    delete_file(video_path)
    print(
        f"‚úÖ –ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≤–∏–¥–µ–æ. –ò—Ç–æ–≥–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {output_path}"
    )
