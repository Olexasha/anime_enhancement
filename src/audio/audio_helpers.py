import os
import subprocess

from colorama import Fore, Style
from tqdm import tqdm

from src.utils.file_utils import delete_file


def get_audio_full_path(video_path: str, audio_dir: str, extension: str = "aac") -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω –∏–∑ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞.

    :param video_path: –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É.
    :param audio_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –∫—É–¥–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∞—É–¥–∏–æ—Ñ–∞–π–ª.
    :param extension: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'aac'.
    :return: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º.
    """
    filename = os.path.splitext(os.path.basename(video_path))[0]
    return os.path.join(audio_dir, f"{filename}.{extension}")


def delete_audio_if_exists(audio_path: str) -> None:
    """
    –£–¥–∞–ª—è–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.

    :param audio_path: –ü—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É.
    """
    if os.path.exists(audio_path):
        delete_file(audio_path)
        print(f"üóëÔ∏è –ê—É–¥–∏–æ—Ñ–∞–π–ª {audio_path} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
    else:
        print(f"–ê—É–¥–∏–æ—Ñ–∞–π–ª {audio_path} –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")


def run_ffmpeg_command_with_progress(
    cmd: list, duration: float, desc: str = "–û–±—Ä–∞–±–æ—Ç–∫–∞", unit: str = "—Å–µ–∫"
) -> None:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É ffmpeg —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∏–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.

    :param cmd: –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ ffmpeg –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞.
    :param duration: –û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–≤–∏–¥–µ–æ –≤ —Å–µ–∫).
    :param desc: –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞.
    :param unit: –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "—Å–µ–∫").
    """
    with tqdm(
        total=round(duration, 1),
        desc=f"{Fore.GREEN}{desc}{Style.RESET_ALL}",
        unit=unit,
        bar_format="{l_bar}{bar}| {n:.1f}/{total:.1f} —Å–µ–∫ [{elapsed}<{remaining}]",
        colour="green",
        ncols=150,
        mininterval=0.5,
    ) as pbar:
        process = subprocess.Popen(
            cmd,
            stdout=subprocess.PIPE,
            stderr=subprocess.DEVNULL,
            universal_newlines=True,
            bufsize=1,
            creationflags=subprocess.CREATE_NO_WINDOW if os.name == "nt" else 0,
        )
        current_time = 0
        for line in process.stdout:
            if line.startswith("out_time_ms="):
                time_ms = int(line.strip().split("=")[1])
                time_sec = min(time_ms / 1_000_000, duration)
                if time_sec > current_time:
                    pbar.update(time_sec - current_time)
                    current_time = time_sec
        process.wait()
        if process.returncode != 0:
            raise subprocess.CalledProcessError(process.returncode, cmd)
